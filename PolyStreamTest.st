'From Squeak5.1 of 5 September 2016 [latest update: #16549] on 3 November 2017 at 1:31:49 pm'!TestCase subclass: #PolyStreamTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'OOP1-Tests'!!PolyStreamTest methodsFor: 'testing' stamp: 'LP 11/2/2017 22:19'!setUp	^0! !!PolyStreamTest methodsFor: 'testing' stamp: 'LP 11/2/2017 22:20'!tearDown	^0! !!PolyStreamTest methodsFor: 'testing' stamp: 'LP 11/3/2017 13:29'!testAddCoeffExp	| ps psValue |	ps := PolyStream new.	ps addCoef: 1 withExp: 2.   " ps = x^2 "	psValue := ps eval: 1.	self assert: (psValue == 1).	psValue := ps eval: 2.	self assert: (psValue == 4).	psValue := ps eval: 0.	self assert: (psValue == 0).			ps addCoef: 1 withExp: 0.  " ps = x^2 + 1"	psValue := ps eval: 1.	self assert: (psValue == 2).	psValue := ps eval: 2.	self assert: (psValue == 5).	psValue := ps eval: 0.	self assert: (psValue == 1).		! !!PolyStreamTest methodsFor: 'testing' stamp: 'LP 11/3/2017 13:31'!testAddPolyStreams	| ps ps2 psValue  tmp |	ps := PolyStream new.	ps addCoef: 1 withExp: 2.   " ps = x^2 "	ps addCoef: 1 withExp: 0.   " ps = x^2 + 1"	ps multiplyBy: 3.                " ps = 3x^2 + 3"		ps2 := PolyStream new.	ps2 addCoef: 2 withExp: 3.  " ps2 = 2x^3 "	ps2 addCoef: 2 withExp: 3.  " ps2 = 2x^3 "	ps add: ps2. 	tmp := ps block value.		"check also that ps2 didn't changed"	psValue := ps eval: 0.	self assert: (psValue == 3).	psValue := ps eval: 1.	self assert: (psValue == 6).	psValue := ps eval: 2.	self assert: (psValue == 15).! !!PolyStreamTest methodsFor: 'testing' stamp: 'LP 11/3/2017 13:28'!testCreateAsZero	| ps psValue |	ps := PolyStream new.	psValue := ps eval: 0.	self assert: (psValue == 0).	psValue := ps eval: 1.	self assert: (psValue == 0).	psValue := ps eval: 10000.	self assert: (psValue == 0).			! !!PolyStreamTest methodsFor: 'testing' stamp: 'LP 11/3/2017 13:28'!testMultiply	| ps psValue  tmp |	ps := PolyStream new.	ps addCoef: 1 withExp: 2.   " ps = x^2 "	ps addCoef: 1 withExp: 0.   " ps = x^2 + 1"	ps multiplyBy: 3.                " ps = 3x^2 + 3"		tmp := ps block value.	psValue := ps eval: 0.	self assert: (psValue == 3).	psValue := ps eval: 1.	self assert: (psValue == 6).	psValue := ps eval: 2.	self assert: (psValue == 15).! !