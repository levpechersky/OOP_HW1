'From Squeak5.1 of 5 September 2016 [latest update: #16549] on 3 November 2017 at 5:17:52 pm'!TestCase subclass: #PolynomTest	instanceVariableNames: 'poly1 poly2 poly3 poly4 poly5 poly6 poly7'	classVariableNames: ''	poolDictionaries: ''	category: 'OOP1_tests'!!PolynomTest methodsFor: 'testing' stamp: 'AS 11/2/2017 22:36'!setUp	"Sets up polynom tests."	poly1 := Polynom new.	poly2 := Polynom new.	poly3 := Polynom new.	poly4 := Polynom new.	poly5 := Polynom new.	! !!PolynomTest methodsFor: 'testing' stamp: 'AS 11/3/2017 16:56'!testAdd	"Tests addition of two polynoms."	| temp1 temp2 temp3 temp4 temp5 test1 res1 |	temp1 := Monom new.	temp2 := Monom new.	temp3 := Monom new.	temp4 := Monom new.	temp1 coef: 4 ; exp: 6.	temp2 coef: 7 ; exp: 5.	temp3 coef: 9 ; exp: 9.	temp4 coef: 10 ; exp: 2.	poly1 addMonom: temp1 ; addMonom: temp2 ; addMonom: temp3 ; addMonom: temp4.	temp1 coef: 7 ; exp: 6.	temp2 coef: 14 ; exp: 5.	temp3 coef: 26 ; exp: 9.	temp4 coef: 43 ; exp: 2.	poly2 addMonom: temp1 ; addMonom: temp2 ; addMonom: temp3 ; addMonom: temp4.	poly1 add: poly2.	res1 := poly1 asDictionary.	test1 := Dictionary new.	test1  add: 6->11 ; add: 5->21 ; add: 9->35 ; add: 2->53.	self assert: (test1 = (poly1 asDictionary)).	temp1 coef: -11 ; exp: 6.	temp2 coef: -21 ; exp: 5.	temp3 coef: -35 ; exp: 9.	temp4 coef: -53 ; exp: 2.	temp5 := Dictionary new.	poly3 addMonom: temp1 ; addMonom: temp2 ; addMonom: temp3 ; addMonom: temp4.	poly1 add: poly3.	self assert: (temp5 = (poly1 asDictionary)).! !!PolynomTest methodsFor: 'testing' stamp: 'AS 11/3/2017 16:57'!testDerivative	"Tests deriving a single polynom."	| temp1 temp2 temp3 temp4 res1 |	temp1 := Monom new.	temp2 := Monom new.	temp3 := Monom new.	temp4 := Monom new.	temp1 coef: 1 ; exp: 5.	temp2 coef: 1 ; exp: 4.	temp3 coef: 1 ; exp: 3.	temp4 coef: 1 ; exp: 2.	poly1 addMonom: temp1 ; addMonom: temp2 ; addMonom: temp3 ; addMonom: temp4.	res1 := Dictionary new.	res1 add: 4->5 ; add: 3->4 ; add: 2->3 ; add: 1->2.	poly1 := poly1 derivative.	self assert: ((poly1 asDictionary) = res1).	res1 := Dictionary new.	res1 add: 3->20 ; add: 2->12 ; add: 1->6 ; add: 0->2.	poly1 := poly1 derivative.	self assert: ((poly1 asDictionary) = res1).	res1 := Dictionary new.	res1 add: 2->60 ; add: 1->24 ; add: 0->6.	poly1 := poly1 derivative.	self assert: ((poly1 asDictionary) = res1).! !!PolynomTest methodsFor: 'testing' stamp: 'AS 11/3/2017 16:57'!testEval	"Tests the evaluation of this polynom at a given point."	| res1 res2 res3 temp1 temp2 temp3 |	temp1 := Monom new.	temp2 := Monom new.	temp3 := Monom new.	temp1 coef: 1 ; exp: 4.	temp2 coef: 0 ; exp: 4.	temp3 coef: 5 ; exp: 3.	poly1 addMonom: temp1 ; addMonom: temp2 ; addMonom: temp3.	res1 := poly1 eval: 1.	self assert: (res1 = 6).	temp1 coef: 0 ; exp: 0.	temp2 coef: 2 ; exp: 6.	temp3 coef: 7 ; exp: 3.	poly2 addMonom: temp1 ; addMonom: temp2 ; addMonom: temp3.	res2 := poly2 eval: 2.	self assert: (res2 = 184).	temp1 coef: 2 ; exp: 2.	temp2 coef: 1 ; exp: 1.	temp3 coef: 0 ; exp: 9.	poly3 addMonom: temp1 ; addMonom: temp2 ; addMonom: temp3.	res3 := poly3 eval: 5.	self assert: (res3 = 55).! !!PolynomTest methodsFor: 'testing' stamp: 'AS 11/3/2017 16:57'!testInitAddMonom	"Tests initiating and adding a Monom to a specific polynom."	| mon1 mon2 mon3 mon4 test1 test2 test3 test4 temp |	mon1 := Monom new.	mon2 := Monom new.	mon3 := Monom new.	mon4 := Monom new.	mon1 coef: 1 ; exp: 3.	mon2 coef: 3 ; exp: 2.	mon3 coef: 6 ; exp: 1.	mon4 coef: 6 ; exp: 0.	"x^3 + 3x^2 + 6x + 6"	poly1 addMonom: mon1 ; addMonom: mon2 ; addMonom: mon3 ; addMonom: mon4.	mon1 coef: 1 ; exp: 4.	mon2 coef: -1 ; exp: 2.	"x^4 - x^2"	poly2 addMonom: mon1 ; addMonom: mon2.	mon3 coef: 2 ; exp: 3.	mon4 coef: -7 ; exp: 10.	"-7x^10 + x^4 +2x^3 - x^2"	poly3 addMonom: mon1 ; addMonom: mon2 ; addMonom: mon3 ; addMonom: mon4.	mon1 coef: 1 ; exp: 7.	mon2 coef: 1 ; exp: 5.	mon3 coef: 1 ; exp: 3.	mon4 coef: 19 ; exp: 1.	poly4 addMonom: mon1 ; addMonom: mon2 ; addMonom: mon3 ; addMonom: mon4.	mon1 coef: -19 ; exp: 1.	"x^7 + x^5 + x^3"	poly4 addMonom: mon1.	test1 := Dictionary new.	test2 := Dictionary new.	test3 := Dictionary new.	test4 := Dictionary new.	test1 add: 3->1 ; add: 2->3 ; add: 1->6 ; add: 0->6.	test2 add: 4->1 ; add: 2->(-1).	test3 add: 10->(-7) ; add: 4->1 ; add: 3->2 ; add: 2->(-1).	test4 add: 7->1 ; add: 5->1 ; add: 3->1.	temp := poly1 asDictionary.	self assert: (test1 = temp).	temp := poly2 asDictionary.	self assert: (test2 = temp).	temp := poly3 asDictionary.	self assert: (test3 = temp).	temp := poly4 asDictionary.	self assert: (test4 = temp).! !!PolynomTest methodsFor: 'testing' stamp: 'AS 11/3/2017 17:12'!testMultiplyByMonom	"Tests multiplying a monom by the given polynom."	| temp1 temp2 temp3 temp4 mul1 test1 |	temp1 := Monom new.	temp2 := Monom new.	temp3 := Monom new.	temp4 := Monom new.	temp1 coef: 3 ; exp: 7.	temp2 coef: 8 ; exp: 1.	temp3 coef: 2 ; exp: 0.	temp4 coef: 5 ; exp: 4.	poly1 addMonom: temp1 ; addMonom: temp2 ; addMonom: temp3 ; addMonom: temp4.	test1 := poly1 asDictionary.	test1 := poly1 eval: 2.	self assert: (test1 = 482).	mul1 := Monom new.	mul1 coef: 13 ; exp: 5.	poly1 multiplyByMonom: mul1.	"poly1 = 39x^12 + 65x^9 + 104x^6 + 26x^5"	self halt.	test1 := poly1 asDictionary.	self assert: ((poly1 eval: 3) = 22087728).	mul1 coef: 0 ; exp: 0.	poly1 multiplyByMonom: mul1.	self assert: ((poly1 eval: 100) = 0).! !